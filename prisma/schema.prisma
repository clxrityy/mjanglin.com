generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("ACCELERATE_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id           String     @id @default(uuid())
  userId       String     @unique
  accessToken  String     @unique
  refreshToken String     @unique
  cooldowns    Cooldown[]
  guilds       Guild[]
  members      Member[]
}

model Birthday {
  id      String @id @default(uuid())
  userId  String
  guildId String
  month   Int
  day     Int
}

model Guild {
  id                String   @id @default(uuid())
  guildId           String   @unique
  userId            String
  changeable        Boolean  @default(false)
  adminRoleId       String?
  birthdayRoleId    String?
  birthdayMessage   String?
  birthdayChannelId String?
  user              User     @relation(fields: [userId], references: [id])
  wishes            Wish[]
  members           Member[] @relation("GuildToMember")
}

model Cooldown {
  id        String   @id @default(uuid())
  userId    String
  command   String
  createdAt DateTime @default(now())
  expiresAt DateTime @default(dbgenerated("(now() + '00:01:00'::interval)"))
  user      User     @relation(fields: [userId], references: [id])
}

model Member {
  id             String   @id @default(uuid())
  userId         String
  friends        String[]
  friendRequests String[]
  user           User     @relation(fields: [userId], references: [id])
  guilds         Guild[]  @relation("GuildToMember")
}

model Wish {
  id           String @id @default(uuid())
  userId       String
  guildId      String
  targetUserId String
  message      String
  year         Int    @default(2024)
  guild        Guild  @relation(fields: [guildId], references: [id])
}
